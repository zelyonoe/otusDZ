---
- name: Install nginx
  ansible.builtin.apt:
    name: "{{ nginx_packages }}"
    state: present
    update_cache: true
  when: ansible_connection != 'local'

- name: Ensure nginx service is enabled and started
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: true
  when: ansible_connection != 'local'

- name: Create web root
  ansible.builtin.file:
    path: "{{ app_root_dir }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: "0755"
  when: ansible_connection != 'local'

- name: Deploy nginx site config
  ansible.builtin.template:
    src: site.conf.j2
    dest: "/etc/nginx/sites-available/{{ nginx_site_name }}.conf"
    owner: root
    group: root
    mode: "0644"
  notify: Reload nginx
  when: ansible_connection != 'local'

- name: Enable site
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ nginx_site_name }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ nginx_site_name }}.conf"
    state: link
    force: true
  notify: Reload nginx
  when: ansible_connection != 'local'

- name: Remove default site if present
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: Reload nginx
  when: ansible_connection != 'local'

